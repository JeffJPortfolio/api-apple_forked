<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="admin">
	
	 <!-- 현오 -->
	<select id="storeSelectList" parameterType="String" resultType="com.javaex.vo.jStoreVo">
	    <![CDATA[
	        select  storeNum, 
	                storeName,
	                storeAddress,
	                storeNumber,
	                storeImage,
	                storeStatus
	        from Store
	        where storeStatus != '폐업'
	    ]]>
	</select>
	
	<update id="storeDelete" parameterType="com.javaex.vo.StoreVo">
	    <![CDATA[
	    UPDATE Store
	    SET
	        storeStatus = '폐업'
	    WHERE
	        storeNum = #{storeNum}
	    ]]>
	</update>
	
	
	<insert id="insertStore" parameterType="com.javaex.vo.StoreVo">
	    <![CDATA[
	        insert  Store, 
        	INSERT INTO Series ((`storeName`, `storeAddress`, `storeNumber`, `storeImage`)
        	VALUES (#{storeName}, #{storeAddress}, #{storeNumber}, #{storeImage})
	    ]]>
	</insert>
	
    <!-- Select user for List -->
	<select id="userSelectList" parameterType="String" resultType="com.javaex.vo.unionVo">
	    <![CDATA[
	        select  userNum, 
	                userId,
	                userPw,
	                userName,
	                userHp,
	                userAddress
	        from user
	        where userStatus = '회원'  
	    ]]>
	</select>
	
	<update id="userDelete" parameterType="com.javaex.vo.unionVo">
	   <![CDATA[
	    UPDATE User
	    SET
	        userStatus = '탈퇴'
	    WHERE
	        userNum = #{userNum}
	    ]]>
	</update>
	
	<select id="deliverySelectList" parameterType="String" resultType="com.javaex.vo.unionVo">
    <![CDATA[
		SELECT 
		    Receipt.receiptNum,
		    History.historyNum,
		    History.productDetailNum,
		    History.productCount,
		    ProductDetail.seriesNum,
		    ProductDetail.productNum,
		    Color.colorName,
		    Display.displaySize,
		    Storage.storageSize,
		    ProductDetail.productPrice,
		    Store.storeName,
		    Store.storeNumber,
		    `User`.userId,
		    `User`.userName,         -- Updated as userName based on your `unionVo`
		    `User`.userAddress,      -- Added userAddress
		    `User`.userHp,           -- Added userHp
		    Receipt.purchasedDate,
		    Receipt.shippingAddress,
		    Receipt.shippingStatus,
		    Receipt.totalPrice,
		    productImage.imageSavedName  -- Added field for image
		FROM 
		    Receipt
		JOIN 
		    History ON Receipt.receiptNum = History.receiptNum
		JOIN 
		    ProductDetail ON History.productDetailNum = ProductDetail.productDetailNum
		JOIN 
		    Color ON ProductDetail.colorNum = Color.colorNum 
		    AND ProductDetail.seriesNum = Color.seriesNum
		JOIN 
		    Display ON ProductDetail.displayNum = Display.displayNum 
		    AND ProductDetail.seriesNum = Display.seriesNum
		JOIN 
		    Storage ON ProductDetail.storageNum = Storage.storageNum 
		    AND ProductDetail.seriesNum = Storage.seriesNum
		JOIN 
		    Store ON Receipt.storeNum = Store.storeNum
		JOIN 
		    `User` ON Receipt.userNum = `User`.userNum
		JOIN 
		    productImage ON ProductDetail.productDetailNum = productImage.productDetailNum  -- Added join with productImage
		WHERE 
		    Receipt.shippingStatus != '배송 완료'
    ]]>
</select>

	
	<select id="historySelectList" parameterType="String" resultType="com.javaex.vo.unionVo">
    <![CDATA[
		SELECT 
		    Receipt.receiptNum,
		    History.historyNum,
		    History.productDetailNum,
		    History.productCount,
		    ProductDetail.seriesNum,
		    ProductDetail.productNum,
		    Color.colorName,
		    Display.displaySize,
		    Storage.storageSize,
		    ProductDetail.productPrice,
		    Store.storeName,
		    Store.storeNumber,
		    `User`.userId,
		    `User`.userName,         -- Updated as userName based on your `unionVo`
		    `User`.userAddress,      -- Added userAddress
		    `User`.userHp,           -- Added userHp
		    Receipt.purchasedDate,
		    Receipt.shippingAddress,
		    Receipt.shippingStatus,
		    Receipt.totalPrice,
		    productImage.imageSavedName  -- Added field for image
		FROM 
		    Receipt
		JOIN 
		    History ON Receipt.receiptNum = History.receiptNum
		JOIN 
		    ProductDetail ON History.productDetailNum = ProductDetail.productDetailNum
		JOIN 
		    Color ON ProductDetail.colorNum = Color.colorNum 
		    AND ProductDetail.seriesNum = Color.seriesNum
		JOIN 
		    Display ON ProductDetail.displayNum = Display.displayNum 
		    AND ProductDetail.seriesNum = Display.seriesNum
		JOIN 
		    Storage ON ProductDetail.storageNum = Storage.storageNum 
		    AND ProductDetail.seriesNum = Storage.seriesNum
		JOIN 
		    Store ON Receipt.storeNum = Store.storeNum
		JOIN 
		    `User` ON Receipt.userNum = `User`.userNum
		JOIN 
		    productImage ON ProductDetail.productDetailNum = productImage.productDetailNum  -- Added join with productImage
		WHERE 
		    Receipt.shippingStatus = '배송 완료'
    ]]>
</select>

	
	
	
	
	<!-- 시리즈 등록 -->
    <insert id="seriesInsert" parameterType="com.javaex.vo.unionVo">
        INSERT INTO Series (seriesName)
        VALUES (#{seriesName})
    </insert>
    
    <!-- 상품 등록 -->
    <insert id="productInsert" parameterType="com.javaex.vo.unionVo">
        INSERT INTO Product (seriesNum, productName, mainImages)
        VALUES (#{seriesNum}, #{productName}, #{mainImages})
    </insert>
	
	<!-- 색상 등록 -->
    <insert id="colorInsert" parameterType="com.javaex.vo.unionVo">
        INSERT INTO Color (productNum, seriesNum, colorName, colorCode)
        VALUES (#{productNum}, #{seriesNum}, #{colorName}, #{colorCode})
    </insert>
    
    <!-- 디스플레이 등록 -->
    <insert id="displayInsert" parameterType="com.javaex.vo.unionVo">
        INSERT INTO Display (productNum, seriesNum, displaySize)
        VALUES (#{productNum}, #{seriesNum}, #{displaySize})
    </insert>
    
    <!-- 용량 등록 -->
    <insert id="storageInsert" parameterType="com.javaex.vo.unionVo">
        INSERT INTO Storage (productNum, seriesNum, storageSize)
        VALUES (#{productNum}, #{seriesNum}, #{storageSize})
    </insert>
    
    <!-- 상품상세 등록 -->
    <insert id="productDetailInsert" parameterType="com.javaex.vo.unionVo">
        INSERT INTO ProductDetail (seriesNum, productNum, colorNum, displayNum, storageNum, productPrice)
        VALUES (#{seriesNum}, #{productNum}, #{colorNum}, #{displayNum}, #{storageNum}, #{productPrice})
    </insert>
    
    <!-- 시리즈 가져오기 -->
	<select id="selectSeriesList" resultType="com.javaex.vo.unionVo">
		<![CDATA[ 
			select seriesNum,
				   seriesName
			from Series
		]]>
	</select>
    
    <!-- 상품명 가져오기 -->
	<select id="selectProductList" parameterType="int" resultType="com.javaex.vo.unionVo">
		<![CDATA[ 
			select seriesNum,
				   productNum,
				   productName
			from Product
			where seriesNum = #{seriesNum}
		]]>
	</select>
    
    <!-- 색상 가져오기 -->
	<select id="selectColorList" parameterType="int" resultType="com.javaex.vo.unionVo">
		<![CDATA[ 
			select colorNum,
				   productNum,
				   seriesNum,
				   colorName,
				   colorCode
			from Color
			where seriesNum = #{seriesNum}
		]]>
	</select>
	
    <!-- 디스플레이 가져오기 -->
	<select id="selectDisplayList" parameterType="int" resultType="com.javaex.vo.unionVo">
		<![CDATA[ 
			select displayNum,
				   productNum,
				   seriesNum,
				   displaySize
			from Display
			where seriesNum = #{seriesNum}
		]]>
	</select>
	
	<!-- 용량 가져오기 -->
	<select id="selectStroageList" parameterType="int" resultType="com.javaex.vo.unionVo">
		<![CDATA[ 
			select storageNum,
				   productNum,
				   seriesNum,
				   storageSize
			from Storage
			where seriesNum = #{seriesNum}
		]]>
	</select>
	
</mapper>